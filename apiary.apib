FORMAT: 1A
HOST: https://api.myperfit.com/v2

# Perfit API

## Group Autenticación

### Login [POST /login]
Existen 3 formas de autenticación:
1. Indicando `user` + `password`. Siendo `user` usuario@cuenta o la dirección de email del usuario.
2. Indicando `user` + `password` + [`account`] . Siendo `user` el email del usuario. Opcionalmente indicar la cuenta en caso de email duplicado. Ver documentación, sección autenticación.
3. Indicando únicamente `apikey`.

Para los casos 1 y 2 puede indicarse también `newPassword` en el caso que sea necesaria un actualización de la contraseña.

+ Request (application/json)

    + Attributes
      + user: diego@perfit.com.ar (string, optional) - email o username@account
      + password: 123 (string, optional)
      + account (string, optional)
      + apikey (string, optional)
      + newPassword (string, optional)

+ Response 201 (application/json)

    Sesión iniciada con éxito.
    
    + Body
    
            {
                "url": "/login",
                "success" : true,
                "data": {
                    "token": "Shjg23Asd4Sdg8fd23F4eg8rF83kgd2s",
                    "tokenExpiration": 3600,
                    "user": "diego",
                    "account": "perfit",
                    "acl": {
                      "perfit": [
                          "lists:list",
                          "contacts:list",
                          "contacts:create",
                          "contacts:delete",
                          "contacts:update"
                      ]
                    }
                }
            }

+ Response 401 (application/json)

    El usuario no existe o la contraseña es inválida. 
    
    + Body
    
            {
                "url": "/login",
                "success" : false,
                  "error": {
                    "status": 401,
                    "type": "UNAUTHORIZED",
                    "userMessage": "The user is not authorized to login"
                  }
            }

+ Response 409 (application/json)

    Si existe más de un usuario asociados al `email` indicado, se dede incluir `account` en el request. Se indica en `data` el array de cuentas a las cuales se tiene acceso.
    
    + Body
    
            {
                "href": "/login",
                "success": false,
                "error": { 
                    "status": 409,
                    "type": "ACCOUNT_REQUIRED",
                    "userMessage": "Se debe indicar la cuenta donde iniciar sesión"
                },
                "data": ["cuenta1", "cuenta2", "cuenta3", ...]
            }

### Logout [POST /logout]
Invalida el token indicado en el header `X-Auth-Token` o en el querystring `token`.

+ Request

    + Headers
    
            X-Auth-Token: access_token

+ Response 200 (application/json)

        {
            "url": "/logout",
            "success" : true
        }



# Group Listas

## Colección [/{account}/lists{?q,offset,limit,sortby,sortdir}]

### Listado y búsqueda [GET]

+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta
  + offset: 0 (number, optional) - Inicio de paginado
  + limit: 10 (number, optional) - Cantidad de resultados
  + q (optional) - Búsqueda por `name`
  + sortby: name (enum[string], optional) - Tipo de ordenamiento
        + Members
            + `name`
            + `created`
            + `lastMailed`
  + sortdir: asc (enum[string], optional) - Sentido de ordenamiento
        + Members
            + `asc`
            + `desc`
  
+ Response 200 (application/json)

        {
            "url": "/testaccount/lists",
            "success" : true,
            "sort": {
                "sortby": "name",
                "sortdir": "asc"
            },
            "paging": {
                "offset": 0,
                "limit": 10,
                "results": 2,
                "total": 2
            },
            "data": [
                {
                    "id": 1,
                    "name": "Suscriptos a Newsletter",
                    "description": "Listado de contactos suscriptos al news",
                    "created": "2014-05-17 05:30:00+0000",
                    "lastMailed": "2014-05-18 05:30:00+0000",
                    "activeContacts": 120,
                    "totalContacts": 100,
                    "quality": 0.23,
                    "tags": [ ]
                }, 
                {
                    "id": 2,
                    "name": "Suscriptos a Ofertas",
                    "description": "Listado de contactos suscriptos a las ofertas",
                    "created": "2014-05-17 05:30:00+0000",
                    "lastMailed": "2014-05-18 05:30:00+0000",
                    "activeContacts": 221,
                    "totalContacts": 204,
                    "quality": 0.34,
                    "tags": [ ]
                }
            ]
        }

### Crear nueva lista [POST]

+ Parameters

    + account: testaccount (string, required) - Nombre de la cuenta


+ Request (application/x-www-form-urlencoded)

    + Attributes
        + name: Nueva lista (string) - Foo param
    
    + Headers

            X-Auth-Token: access_token
            
+ Response 201 (application/json)

    + Headers

            Location: /testaccount/lists/1
        
    + Body
    
            {
                "url": "/testaccount/lists",
                "success" : true,
                "data": {
                    "id": 1,
                    "name": "Nueva lista",
                    "description": "Listado de contactos suscriptos al news",
                    "created": "2014-05-17 05:30:00+0000",
                    "lastMailed": "2014-05-18 05:30:00+0000",
                    "activeContacts": 120,
                    "totalContacts": 100,
                    "quality": 0.23,
                    "tags": [ ]
                }
            }

## Elemento [/{account}/lists/{id}]

+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Obtener lista [GET]

+ Response 200 (application/json)

        {
            "url": "/testaccount/lists/1",
            "success" : true,
            "data": {
                "id": 1,
                "name": "Suscriptos a Newsletter",
                "description": "Listado de contactos suscriptos al news",
                "created": "2014-05-17 05:30:00+0000",
                "lastMailed": "2014-05-18 05:30:00+0000",
                "activeContacts": 120,
                "totalContacts": 100,
                "quality": 0.23,
                "tags": [ ]
            }
        }

### Modificar lista [PUT]

+ Request (application/json)

        {
            "description": "Nueva descrpción de la lista"
        }

+ Response 200  (application/json)

        {
            "url": "/testaccount/lists/1",
            "success" : true,
            "data": {
                "description": "Nueva descrpción de la lista"
            } 
        }

### Eliminar lista [DELETE]

+ Response 201  (application/json)

        {
            "url": "/testaccount/lists",
            "success" : true
        }

## Acción [/{account}/lists/{id}/{action}]

+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Clean [POST /{account}/lists/{id}/clean]
Limpia los contactos de una lista, según el criterio indicado. Pueden indicarse uno o varios criterios en simultáneo. El resultado es la UNION de los criterios, no la intersección.

+ Request (application/x-www-form-urlencoded)

    + Attributes
        + bounced (boolean, optional) - Limpia contactos marcados como rebotados.
        + complained (boolean, optional) - Limpia contactos marcados con quejas.
        + unsubscribed (boolean, optional) - Limpia contactos marcados como desuscriptos. 
        + inactiveDays (boolean, optional) - Limpia contactos que no demuestran actividad en los últimos N días, o no tienen actividad alguna. 
        + quality (boolean, optional) -  Limpia los contactos con calidad menor o igual a N, 0<=N<=1. 
        + action: remove (enum[string], optional) - Indica que hacer con los contactos que coinciden con el criterio.
            + Members
                + `delete`
                + `remove`
    
    + Headers

            X-Auth-Token: access_token
  


### Split [GET /{account}/lists/{id}/split]
Divide la lista según el criterio indicado. 
+ Parameters
 + numLists: 2 (number, required) - Indica la cantidad de listas resultantes. Los contactos se dividen en partes iguales, ajustando en alguna lista si la cantidad de contactos no es divisible. min=2, max=100


### Duplicate [GET /{account}/lists/{id}/duplicate]
Duplica una lista, creando una nueva.
+ Parameters
 + newListName: Copia de Lista A (string, required) - Nombre de la nueva lista.

### Substract [GET /{account}/lists/{id}/substract]
Saca de una lista los contactos que aparecen en otras listas.

+ Parameters
 + substractListIds: [43,54,12] (array[numbers], required) - Id de las listas para realizar la resta.


### Sample [GET /{account}/lists/{id}/sample]
Toma una muestra random de N contactos de una lista, creando una lista nueva.
+ Parameters
 + newListName: Copia de Lista A (string, required) - Nombre de la nueva lista.
 + sampleSize: 4000 (number, required) - Indica la cantidad de contactos a obtener del muestreo.

### Join [GET /{account}/lists/{id}/join]
Une varias listas creando una nueva.
+ Parameters
 + newListName: Copia de Lista A (string, required) - Nombre de la nueva lista.
 + listIds: [43,54,12] (array[numbers], required) - Id de las listas para realizar la union.


### Delete [GET /{account}/lists/{id}/delete]
Elimina la lista y opcionalmente sus contactos, según la opción indicada
 + deleteContacts: remove (enum[string], optional) - Indica que hacer con los contactos que coinciden con el criterio.
        + Members
            + `NONE`
            + `ALL`
            + `NOT_IN_OTHER_LISTS`
 
# Group Contactos

## Colección [/{account}/contacts{?q,offset,limit,sortby,sortdir}]

### Listado y búsqueda [GET]

+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta
  + offset: 0 (number, optional) - Inicio de paginado
  + limit: 20 (number, optional) - Cantidad de resultados
  + q (optional) - Búsqueda por `email`
  + state (optional) - Estado de los contactos
        + Members
            + `active`
            + `unsubscribed`
            + `compained`
            + `bounced`
            + `inactive`
  + domain (optional) - Dominio de los contactos.
  + interest (optional) - Se pasa el ID.
  + list (optional) - Se pasa el ID.
  + sortby: email (enum[string], optional) - Tipo de ordenamiento
        + Members
            + `email`
            + `quality`
  + sortdir: asc (enum[string], optional) - Sentido de ordenamiento
        + Members
            + `asc`
            + `desc`

+ Response 200 (application/json)

        {
          "href": "/v2/testaccount/contacts",
          "success": true,
          "paging": {
            "offset": 0,
            "limit": 20,
            "results": 2,
            "total": 2
          },
          "sort": {
            "sortBy": "email",
            "sortDir": "asc"
          },
          "data": [
            {
              "id": 7,
              "email": "prueba@hotmail.com"
            },
            {
              "id": 6,
              "email": "prueba@prueba.com"
            }
          ]
        }


### Crear nuevo contacto [POST]

+ Parameters
 + email:  prueba@prueba.com (string, required) - Email del contacto, no se puede modificar.
 + firstName : prueba (string, optional) - Nombre del contacto.
 + lastName : prueba (string, optional) - Apellido del contacto.
 + gender : M (enum[string], optional) - Sexo del contacto
        + Members
            + `M`
            + `F`
            + ``
 + language : es (enum[string], optional) - Idioma del contacto.
        + Members
            + `de`
            + `en`
            + `es`
            + `fr`
            + `it`
            + `pt`
            + ``
 + preferredFormat : HTML (enum[string], optional) - Formato preferido del contacto.
        + Members
            + `HTML`
            + `TEXT`
 + state : ACTIVE (enum[string], optional) - Estado del contacto.
        + Members
            + `ACTIVE`
            + `BOUNCED`
            + `UNSUBSCRIBED`
            + `COMPLAINED`
 + quality (number, optional) - Calificación del Contacto
 + source : MANUAL (enum[string], optional) - Fuente de ingreso del contacto.
        + Members
            + `MANUAL`
            + `OPTIN_FORM`
            + `IMPORTED_CSV`
            + `IMPORTED_YAHOO`
            + `IMPORTED_GMAIL`
            + `IMPORTED_HOTMAIL`
            + `IMPORTED_EXCEL`
            + `IMPORTED_MELI`
            + `FORWARD`
 + customFields (array, optional) - Campos personalizados      
 + lists (array[list], optional) - 
 + interests (array[insterest], optional) -


## Elemento [/{account}/contacts/{id}]

### Obtener contacto [GET]
Obtiene el contacto indicado.
+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

+ Response 200 (application/json)

        {
          "href": "/v2/testaccount/contacts/1",
          "success": true,
          "data": {
            "id": 1,
            "email": "test@test.com",
            "firstName": "",
            "lastName": "",
            "gender": "",
            "language": "",
            "preferredFormat": "HTML",
            "source": "MANUAL",
            "state": "ACTIVE",
            "quality": 0,
            "lastMailed": "2016-07-06T12:28:08Z",
            "lastAction": "2016-07-13T15:10:02Z",
            "created": "2016-04-16T12:31:18Z",
            "lastModified": "2017-01-25T20:47:34Z",
            "inactivated": null,
            "lists": [
              {
                "id": 1,
                "name": "Lista 1"
              },
              {
                "id": 277,
                "name": "Lista 277"
              }
            ],
            "interests": [
              {
                "id": 3,
                "name": "ropa",
                "subscribed": "2016-05-27T17:44:22Z"
              }
            ],
            "customFields": [
              {
                "id": 10,
                "name": "TELEFONO",
                "format": "TEXT",
                "value": ""
              }
            ]
          }
        }

### Modificar contacto [PUT]
Modifica el contacto indicado.
+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)
    + firstName : prueba (string, optional) - Nombre del contacto.
    + lastName : prueba (string, optional) - Apellido del contacto.
    + gender : M (enum[string], optional) - Sexo del contacto
            + Members
                + `M`
                + `F`
                + ``
    + language : es (enum[string], optional) - Idioma del contacto.
            + Members
                + `de`
                + `en`
                + `es`
                + `fr`
                + `it`
                + `pt`
                + ``
    + preferredFormat : HTML (enum[string], optional) - Formato preferido del contacto.
            + Members
                + `HTML`
                + `TEXT`
    
    + customFields (array, optional) - Campos personalizados      
    + lists (array[list], optional) - 
    + interests (array[insterest], optional) -
    

### Eliminar contacto [DELETE]
Elimina el contacto indicado.
+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)
    
## Acción [/{account}/contacts/{id}/{action}]

+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Unsubscribe [GET /{account}/contacts/{id}/unsubscribe]
Marca el contacto indicado como desuscripto, esta acción no puede deshacerse.

+ Response 200 (application/json)

        {
         "href": ".../contacts/1/unsubscribe",
         "success": true
        }

# Group Campañas

## Campaigns List [/{account}/campaigns{?q,offset,limit,sortby,sortdir}]

### Listar todas las campañas [GET]

+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta
  + offset: 0 (number, optional) - Inicio de paginado
  + limit: 10 (number, optional) - Cantidad de resultados
  + q (optional) - Búsqueda por `name`
  + sortby: name (enum[string], optional) - Tipo de ordenamiento
        + Members
            + `name`
            + `created`
            + `lastMailed`
  + sortdir: asc (enum[string], optional) - Sentido de ordenamiento
        + Members
            + `asc`
            + `desc`

+ Response 200 (application/json)

        {
            "url": "/testaccount/campaigns",
            "success" : true,
            "sort": {
                "sortby": "name",
                "sortdir": "asc"
            },
            "paging": {
                "offset": 0,
                "limit": 10,
                "results": 2,
                "total": 2
            },
            "data": [
                {
                    "id": 1,
                    "name": "Suscriptos a Newsletter",
                    "description": "Listado de contactos suscriptos al news",
                    "created": "2014-05-17 05:30:00+0000",
                    "lastMailed": "2014-05-18 05:30:00+0000",
                    "activeContacts": 120,
                    "totalContacts": 100,
                    "quality": 0.23,
                    "tags": [ ]
                }
            ]
        }

### Crear una nueva Campaña [POST]

+ Parameters
    + name: (string, required) - Nombre de la campaña
    + type (optional) - Tipo de campaña (default SIMPLE)
    + description (optional) - Descripcion de campaña
    + launchMode (enum[string], optional) - 

            + Default: `NOW`

            + Members
                + `NOW` - Enviar Campaña Ahora.
                + `SCHEDULED` - Enviar Campaña Programada.
    + launch (optional) - Fecha de envio . para especificar un fecha de launch, launchMode debe ser SCHEDULED
    + tags (optional) - Tags de campaña
    + options (optional) - Opciones de la campaña.
    + include (optional) - Include de la campaña.
    + exclude (optional) - Exlude de la campaña.

+ Response 200 (application/json)

        {
          "href": "/v2/testaccount/campaigns",
          "success": true,
          "data": {
            "id": 595,
            "name": "tests campaign",
            "description": "",
            "tags": [],
            "type": "SIMPLE",
            "state": "DRAFT",
            "launchMode": "NOW",
            "launchDate": null,
            "archived": null,
            "created": "2017-01-30T16:41:27Z",
            "lastModified": "2017-01-30T16:41:27Z",
            "recipients": null,
            "thumbnail": null,
            "metrics": null,
            "options": {
              "SHARE_FACEBOOK": "1",
              "GA_CAMPAIGN_NAME": "tests campaign",
              "GOOGLE_ANALYTICS": "1",
              "SHARE_LINKEDIN": "1",
              "TRACK_LINKS": "1",
              "VIEW_ONLINE": "1",
              "SHARE_TWITTER": "1",
              "SHARE_FORWARD": "1"
            },
            "include": {
              "lists": [],
              "interests": [],
              "campaigns": []
            },
            "exclude": {
              "lists": [],
              "interests": [],
              "campaigns": []
            },
            "contents": []
          }
        }

## Elemento [/{account}/campaign/{id}]

+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Obtener Campaña [GET]
Obtiene la campaña indicada.

+ Response 200 (application/json)

    {
      "href": "/v2/testaccount/campaigns/1",
      "success": true,
      "data": {
        "id": 594,
        "name": "Test",
        "description": "",
        "tags": [],
        "type": "SIMPLE",
        "state": "DRAFT",
        "launchMode": "NOW",
        "launchDate": null,
        "archived": null,
        "created": "2017-01-26T21:53:13Z",
        "lastModified": "2017-01-26T21:53:13Z",
        "recipients": 0,
        "thumbnail": "https://thmb.myperfit.com/3835/_cpg/1/thumb-1",
        "metrics": null,
        "options": {
          "SHARE_FACEBOOK": "1",
          "GA_CAMPAIGN_NAME": "Test",
          "GOOGLE_ANALYTICS": "0",
          "SHARE_LINKEDIN": "1",
          "TRACK_LINKS": "0",
          "USE_FOOTER": "0",
          "VIEW_ONLINE": "1",
          "SHARE_TWITTER": "1",
          "SHARE_FORWARD": "1",
          "USE_HEADER": "0"
        },
        "include": {
          "campaigns": [
            {
              "id": 2,
              "action": "SENT"
            }
          ]
        },
        "exclude": {
          "campaigns": [
            {
              "id": 2,
              "action": "OPENED"
            }
          ]
        },
        "contents": [
          {
            "id": 507,
            "type": "HTML",
            "subject": "Prueba 1234",
            "from": "user@email.com",
            "fromName": "user",
            "replyTo": "user@email.com",
            "replyToName": "user",
            "unsubscribeText": "prueba text",
            "thumbnail": "https://thmb.myperfit.com/3835/_cpg/1/thumb-1"
          }
        ]
      }
    }


### Modificar Campaña [PUT]   
Modifica la info de la campaña indicada.  En estado draft puede modificarse todo. En cualquier otro estado sólo puede modificarse los tags.

+ Parameters
    + name: (string, optional) - Nombre de la campaña
    + description (optional) - Descripcion de campaña
    + launchMode (enum[string], optional) - 
    
            + Default: `NOW`

            + Members
                + `NOW` - Enviar Campaña Ahora.
                + `SCHEDULED` - Enviar Campaña Programada.
    + launch (optional) - Fecha de envio . para especificar un fecha de launch, launchMode debe ser SCHEDULED
    + tags (optional) - Tags de campaña
    + options (optional) - Opciones de la campaña.
    + include (optional) - Include de la campaña.
    + exclude (optional) - Exlude de la campaña.
    
### Eliminar Campaña [DELETE]   
Elimina la campañas indicada.
Sólo pueden eliminarse campañas en estado DRAFT.

## Acción [/{account}/contacts/{id}/{action}]

+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Validate [GET /{account}/campaign/{id}/validate]
Verifica que la campaña cumpla con todos los requisitos para ser enviada. Devuelve los resultados de cada validación. Sólo las campañas en estado DRAFT se pueden validar.

### Launch [GET /{account}/campaign/{id}/launch]

Marca la campañas indicada como pendiente de envío. Sólo aplica para campañas en estado DRAFT
### Stop [GET /{account}/campaign/{id}/stop]
Detiene la campaña indicada, volviéndola a estado DRAFT. La campaña debía estar en estado PENDING_APPROVAL o SCHEDULED

### Duplicate [GET /{account}/campaign/{id}/duplicate]
Detiene la campaña indicada, volviéndola a estado DRAFT. La campaña debía estar en estado PENDING_APPROVAL o SCHEDULED
+ Parameters
    + name:  (string, required) - Nombre de la nueva Campaña.

### Archive [GET /{account}/campaign/{id}/archive]
Archiva la campaña indicada. Sólo pueden archivarse las campañas en estado SENT y CANCELLED.
### Unarchive [GET /{account}/campaign/{id}/unarchive]
Desarchiva la campaña indicada.

### Enviar Test [GET /{account}/campaign/{id}/contents/{idContent}/sendtest]
Envía un mail de prueba del contenido especificado. Se indican los emails a usar para probar. Se puede indicar hasta 10 emails.

+ Request (application/json)

        {
            "emails" : [ “test1@example.com”, “test2@example.com” ]
        }

## Contenido [/{account}/contacts/{id}/contents]

+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Crear Contenido [POST /{account}/campaign/{id}/contents]

Crea un nuevo contenido para la campaña especificada. 

+ Parameters
    + type (enum[string], optional) - 
            + Default: `HTML`
            + Members
                + `HTML` - Enviar Campaña Ahora.
                + `EDDIE` - Enviar Campaña Programada.
    + subject: (string, optional) -
    + from: (string, optional) - 
    + fromName: (string, optional) - 
    + replyTo: (string, optional) - 
    + replyToAddress: (string, optional) - 
    + unsubscribeText: (string, optional) -

### Obtener Contenido [GET /{account}/campaign/{id}/contents/{idContent}]

Muestra la informacion del contenido indicado.

+ Response 200 (application/json)

        { 
          "id": 23,
          "type": "HTML",
          "subject": "",
          "from": "",
          "fromName": "",
          "replyTo": "",
          "replyToName": "",
          "unsubscribeTest": "...",
          "thumbnail: "..."
        }

### Modificar Contenido [PUT /{account}/campaign/{id}/contents/{idContent}]
Modifica la info del contenido indicado. Sólo pueden modificarse contenidos de campañas DRAFT

+ Parameters
    + subject: (string, optional) -
    + from: (string, optional) - 
    + fromName: (string, optional) - 
    + replyTo: (string, optional) - 
    + replyToAddress: (string, optional) - 
    + unsubscribeText: (string, optional) -

### Eliminar Contenido [DELETE /{account}/campaign/{id}/contents/{idContent}] 

Elimina el contenido especificado. Sólo pueden eliminarse contenidos de campañas DRAFT.

### Obtener Cuerpo del Contenido [GET /{account}/campaign/{id}/contents/{idContent}.(type)]
Muestra el contenido del tipo indicado. Puede ser html, txt o json (en caso de ser tipo eddie)

### Modificar Cuerpo del Contenido [PUT /{account}/campaign/{id}/contents/{idContent}.(type)]
Modifica el contenido del tipo indicado. Puede ser html, txt o json (en caso de ser tipo eddie)


# Group Reportes Campañas

## Contenido [/{account}/campaigns/{id}]

+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)


### Obtener las Metricas [GET /{account}/campaigns/{id}/metrics]
Muestra las métricas de la campaña indicada.


+ Response 200 (application/json)

{
    "href": ".../campaigns/1/metrics",
    "success": true,
    "data": {
    "sent": 1000,
    "sentP": 100,
    "delivered": 998,
    "deliveredP": 99.8,
    "opened": 200,
    "openedP": 20,
    "openedT": 1234,
    "viewsOnline": 12,
    "clicked": 50,
    "clickedP": 5,
    "clickedT": 67,
    "ctor": 14, 
    "converted": 1,
    "convertedP": 0.1
    "bounced":
    "bouncedP":
    "bouncedHard":
    "bouncedHardP":
    "bouncedSoft":
    "bouncedSoftP":
    "complained":2
    "complainedP":0.02
    "unsubscribed":3
    "unsubscribedP":0.03
    "shared": 23
    "sharedOpened": 110
    "sharedClicked": 23
}
}


### Obtener contactos segun Accion. [GET /{account}/campaigns/{id}/actions]
Muestra las acciones realizadas en la campaña indicada.

+ Parameters
  + offset: 0 (number, optional) - Inicio de paginado
  + limit: 20 (number, optional) - Cantidad de resultados
  + q (optional) - Búsqueda por `name`
  + sortby: date (enum[string], optional) - Tipo de ordenamiento
        + Members
            + `date`
  + sortdir: desc (enum[string], optional) - Sentido de ordenamiento
        + Members
            + `asc`
            + `desc`
   + type (enum[string], required) - 
            + Members
                + `ALL` - Si se está haciendo un reporte JSON solo es válido all si se aplicó la opción de búsqueda por email.
                + `SENT` -      
                + `OPEN` -      
                + `CLICK` -      
                + `HARD_BOUNCE` -      
                + `SOFT_BOUNCE` - 
                + `UNSUBSCRIBE` - 
                + `COMPLAINT` - 
                + `SHARE` - 
                + `CONVERSION` - 
                + `NO_OPEN` - 
                + `NO_CLICK` - 
                + `NO_CONVERSION` - 


### Obtener contactos segun Accion. [GET /{account}/campaigns/{id}/timeline]
Muestra las métricas (opens, clicks) por hora de la campaña indicada.





# Group Intereses

## Intereses List [/{account}/interests]

### Listar todas los Intereses [GET]
+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta
  + offset: 0 (number, optional) - Inicio de paginado
  + limit: 10 (number, optional) - Cantidad de resultados
  + q (optional) - Búsqueda por `name`
  + sortby: name (enum[string], optional) - Tipo de ordenamiento
        + Members
            + `name`
            + `created`
            + `lastMailed`
  + sortdir: asc (enum[string], optional) - Sentido de ordenamiento
        + Members
            + `asc`
            + `desc`

### Crear un nuevo Interes [POST]
+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta.
  + name:  (string, required) - Nombre del interes.
  + description:  (string, optional) - Descripcion.
  + expirationDays:  (string, optional) - Dias de expiracion.


## Elemento
+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Obtener un Interes [POST /{account}/interests/{id}]


+ Response 200 (application/json)
    
    {
      "href": ".../interests/12",
      "success": true,
      "data":{
            "id": 12,
            "name": "Interes A",
            "description": "",
            "expirationDays": 0
        }
    }



### Modificar un Interes [PUT /{account}/interests/{id}]

Modifica el interés indicado. 

+ Parameters
  + name:  (string, required) - Nombre del interes.
  + description:  (string, optional) - Descripcion.
  + expirationDays:  (string, optional) - Dias de expiracion.

### Eliminar un Interes [DELETE /{account}/interests/{id}]
Elimina el interes.



# Group Campos Personalizados

## Fields List [/{account}/fields]

### Listar todas los Campos Personalizados [GET]
+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta
  + offset: 0 (number, optional) - Inicio de paginado
  + limit: 20 (number, optional) - Cantidad de resultados
  + q (optional) -  Búsqueda exacta, puede utilizarse el wildcard *
  + sortby: id (enum[string], optional) - Tipo de ordenamiento
        + Members
            + `name`
            + `id`
  + sortdir: asc (enum[string], optional) - Sentido de ordenamiento
        + Members
            + `asc`
            + `desc`
  + filter : filter[custom]=true (array[string], optional) - Filtrar por tipo.
        

### Crear un nuevo Campo Personalizado  [POST]
+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta.
  + name:  (string, required) - Nombre del campo personalizado.
  + tag:  (string, optional) - Descripcion.
  + format (enum[string], optional) - 
            + Default: `TEXT`
            + Members
                + `TEXT` 
                + `INT` 
                + `DATE` 

## Elemento
+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Obtener un Campo Personalizado [POST /{account}/fields/{id}]


+ Response 200 (application/json)
    
    {
    "href": ".../fields/1"
    "success": true,
    "data:{
            "id: 11,
            "name:"Domicilio",
            "tag: "ADDR",
            "format: "TEXT",
            "custom: true
        }
    }




### Modificar un Campo Personalizado [PUT /{account}/fields/{id}]

Modifica el interés indicado. 

+ Parameters
+ name:  (string, required) - Nombre del campo personalizado.
+ tag:  (string, optional) - Descripcion.

### Eliminar un Interes [DELETE /{account}/fields/{id}]
Elimina un campo personalizado.


# Group Tareas

## Fields tasks [/{account}/tasks]

### Listar todas las tareas [GET]

+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta
  + offset: 0 (number, optional) - Inicio de paginado
  + limit: 5 (number, optional) - Cantidad de resultados
  + name (optional) -  Búsqueda exacta, puede utilizarse el wildcard *
  + sortby: created (enum[string], optional) - Tipo de ordenamiento
        + Members
            + `created`
  + sortdir: desc (enum[string], optional) - Sentido de ordenamiento
        + Members
            + `asc`
            + `desc`
  + filter : filter[state]=todos (array[string], optional) - Filtrar por estado o tipo. 'active' o 'finished'

## Elemento
+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Obtener una Tarea [POST /{account}/tasks/{id}]


+ Response 200 (application/json)
    
    {
    "href": "/testaccount/tasks/1",
    "success": true,
    "data":{
        "id": 1,
        "type": "LIST_CLEAN",
        "name": "Limpieza de lista A",
        "state": "PROCESSING",
        "cancellable": false,
        "message": "Limpiando lista",
        "created": "2014-05-20T10:22:04-0300",
        "owner": "testaccount",
        "init": "2014-05-20T10:23:04-0300",
        "end": null,
        "completed": 0.45,
        "eta": 300,
        "request": "/testaccount/lists/1/clean",
        "parameters": {"bounced": true, 
        "complained": true, 
        "unsubscribed": true},
        "result": null
    }
}

### Cancelar una Tarea [POST /{account}/tasks/{id}/cancel]

La tarea sólo puede ser cancelada por el usuario owner o por un usuario con el permiso tasks:cancel, y sólo cuando está en estado queued, initializing o processing con cancellable en true.

+ Response 200 (application/json)

    {
        "href" : "/testaccount/tasks/1",
        "success" : true,
    }
    
    
# Group Importacion

## Fields import [/{account}/contacts/import]

### Importar Contactos desde CSV[POST]
Importa contactos masivamente. Es una acción asincrónica.

+ Request (application/json)

        {
            "type": "CSV",
            "sourceRaw": "email@example.com,john,doe\nemail2@xample.com,Tom,Smith",
            "list": 1,
            "interests": [3, 5],
            "mode": "IGNORE",
            "columnFields": [3, 1, 2], 
            "columnHeaders": false,
            "columnSeparator": ",",
            "stringDelimiter": "'",
        }

### Importar Contactos desde Archivo[POST]
Importa contactos masivamente. Es una acción asincrónica. Se requiere hacer el upload del archivo antes. 

+ Request (application/json)      

        {
            "type": "CSV",
            "sourceFile": "temp.csv",
            "sourceFileEncoding": "ISO-8859-1",
            "list": 1,
            "interests": [3, 5],
            "mode": "OVERWRITE",
            "normalizeCase": true,
            "interestColumn": 4,
            "interestDefaultExpirationDays": 0,
            "columnFields": [3,2,1], 
            "columnHeaders": true,
            "columnSeparator": ",",
            "stringDelimiter": "\"",
            "dateFormat": "dd/mm/yyyy"
        }


### Previsualizacion de la Importacion [POST /{account}/contacts/import/preview]
Hace un preview de una importación.
Recibe los mismos parámetros del import, pero como resultado devuelve el listado de los primeros contactos que se generarían utilizando las opciones indicadas o inferidas.
        

### Subir un archivo  [POST /{account}/contacts/import/upload]
Sube un archivo para ser importado. Se devuelve el nombre que se debe usar para referirse a este archivo al momento de la importación o preview.
El formato del POST debe ser en multipart/form-data y el nombre del part debe ser fileToUpload


+ Response 200 (application/json)

    {
        "href": "/testaccount/contacts/import/upload",
        "success": true,
        "data": {
            "id: "temp.csv"
        }
    }
    
    
    
# Group Formularios

## Fields Optins [/{account}/optins]

### Listar todas los Formularios [GET]
+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta
  + offset: 0 (number, optional) - Inicio de paginado
  + limit: 20 (number, optional) - Cantidad de resultados
  + q (optional) -  Búsqueda exacta, puede utilizarse el wildcard *
  + sortby: name (enum[string], optional) - Tipo de ordenamiento
        + Members
            + `name`
            + `created`
            + `totalSubscriptions`
            + `lastmonthsubscriptions`
            + `lastweeksubscriptions`
  + sortdir: asc (enum[string], optional) - Sentido de ordenamiento
        + Members
            + `asc`
            + `desc`
  + filter : filter[list]=1 (array[string], optional) - Filtra los optins asociados a la lista indicada
        


### Crear un nuevo Formulario  [POST]
+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta.
  + name:  (string, required) 
  + lists:  (array[int], required) 
  + form:  (Form, required)
  + confirmation:  (Confirmation, required) -
  + description (string, optional) - Descripcion.

+ Request (application/json)


    {
        "name": "test integracion2",
        "description": "asdasdas",
        "lists": ["229", "307"],
        "form": {
            "title": "SUSCRIPCIÓN",
            "text": "Completa tus datos para suscribirte",
            "interestsText": "",
            "buttonText": "ENVIAR",
            "footer": "",
            "successMessage": "¡Muchas gracias! Recibirás un email para validar tu casilla.",
            "redirect": "",
            "fields": [{
                "id": 3,
                "displayName": "Email",
                "required": true
            }, {
                "id": 1,
                "displayName": "Nombre",
                "required": false
            }, {
                "id": 2,
                "displayName": "Apellido",
                "required": false
            }],
            "interests": []
        },
        "confirmation": {
            "fromAddress": "test@test.com.ar",
            "fromName": "test",
            "subject": "Confirma tu suscripción",
            "title": "Confirmación",
            "header": "Para validar tu casilla y confirmar la suscripción, haz click aquí:",
            "linkText": "CONFIRMAR",
            "footer": "Si nunca te suscribiste por favor ignora ese mensaje.",
            "redirect": "https://optin.myperfit.com/confirmed"
        }
    }

## Elemento
+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Obtener un Formulario [GET /{account}/optins/{id}]
Obtiene el formulario solicitado.

+ Response 200 (application/json)
{
        "name": "test integracion2",
        "description": "asdasdas",
        "lists": ["229", "307"],
        "form": {
            "title": "SUSCRIPCIÓN",
            "text": "Completa tus datos para suscribirte",
            "interestsText": "",
            "buttonText": "ENVIAR",
            "footer": "",
            "successMessage": "¡Muchas gracias! Recibirás un email para validar tu casilla.",
            "redirect": "",
            "fields": [{
                "id": 3,
                "displayName": "Email",
                "required": true
            }, {
                "id": 1,
                "displayName": "Nombre",
                "required": false
            }, {
                "id": 2,
                "displayName": "Apellido",
                "required": false
            }],
            "interests": []
        },
        "confirmation": {
            "fromAddress": "test@test.com.ar",
            "fromName": "test",
            "subject": "Confirma tu suscripción",
            "title": "Confirmación",
            "header": "Para validar tu casilla y confirmar la suscripción, haz click aquí:",
            "linkText": "CONFIRMAR",
            "footer": "Si nunca te suscribiste por favor ignora ese mensaje.",
            "redirect": "https://optin.myperfit.com/confirmed"
        }
    }

### Modificar un Formulario [PUT /{account}/optins/{id}]

Modifica el interés indicado. 

+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta.
  + name:  (string, optional) 
  + lists:  (array[int], optional) 
  + form:  (Form, optional)
  + confirmation:  (Confirmation, optional) -
  + description (string, optional)  - Descripcion.


### Eliminar un Formulario [DELETE /{account}/optins/{id}]
Elimina un formulario.


# Group Plantillas

## Fields Templates [/{account}/templates]

### Listar todas las Plantillas [GET]
+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta
  + offset: 0 (number, optional) - Inicio de paginado
  + limit: 100 (number, optional) - Cantidad de resultados
  + q (optional) -  Busca por *name*
  + sortby: type (enum[string], optional) - Tipo de ordenamiento
        + Members
            + `name`
            + `type`
            + `created`
  + sortdir: asc (enum[string], optional) - Sentido de ordenamiento
        + Members
            + `asc`
            + `desc`
  + filter : filter[type]=all (array[string], optional) - Filtra segun el tipo. (html, eddie, templates, folders)
        


### Crear una nueva Plantilla  [POST]
+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta.
  + name:  (string, required) - Nombre de la Plantilla
  + type : HTML (enum[string], required) - Tipo de Plantilla
    + Members
        + `HTML`
        + `EDDIE`
        + `FOLDER`
  + htmlFile (string, optional) -  (sólo para type=HTML)
  + htmlUrl (string, optional) -   (sólo para type=HTML)
  + htmlRaw (string, optional) -   (sólo para type=HTML)
  

+ Request (application/json)

    {
        "type": "EDDIE",
        "name": "Mi Plantilla Eddie"
    }

## Elemento
+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Obtener una Plantilla [GET /{account}/templates/{id}]
Devuelve el template o carpeta indicado

+ Response 200 (application/json)

{
    "href": ".../templates/1301931536/1301931456"
    "success": true,
    "data": {
        "id": "/1301931536/1301931456",
        "type": "HTML",
        "name": "Mi Plantilla HTML",
        "location": "/1301931536/",
        "created": "2015-12-02T10:23:12+0000",
        "thumbnail": "http://myperfit.com/../thumb.png"
    }
}

### Obtener el contenido una Plantilla [GET /{account}/templates/{id}.(type)]

Devuelve el contenido de tipo (type) del template indicado
Los (type) posibles son html, json y txt


+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta.

### Previsualizar una Plantilla [GET /{account}/templates/{id}/preview]
Devuelve el preview del contenido html.
El preview incluye el envelope para que sea un html bien formado y con estilos responsive (tags html, head, style, etc)


+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta.

### Modificar una Plantilla [PUT /{account}/templates/{id}]

Modifica la plantilla indicada. 

+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta.
  + name (string, optional) - Nuevo nombre en caso de querer renombrar.
  + location (string, optional) - Nueva ubicación en caso de querer mover.


### Eliminar una Plantilla [DELETE /{account}/templates/{id}]
Elimina una plantilla.


# Group Imagenes

## Fields images [/{account}/images]

### Listar todas las Imagenes/Carpetas [GET]
Devuelve el listado de imágenes y carpetas

+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta
  + offset: 0 (number, optional) - Inicio de paginado
  + limit: 100 (number, optional) - Cantidad de resultados
  + q (enum[string], optional) -  Busca por name . 
        + Members
            + `*key* - (nombre contiene key)` 
            + `key - (matcheo exacto a key)`
            + `!key - (recursivo matcheo exacto)`
            + `!*key* - (recursivo nombre contiene key)`
  + sortby: type (enum[string], optional) - Tipo de ordenamiento
        + Members
            + `name`
            + `type`
            + `created`
  + sortdir: asc (enum[string], optional) - Sentido de ordenamiento
        + Members
            + `asc`
            + `desc`
  + filter : filter[type]=all (array[string], optional) - Filtra segun el tipo. (folder, image, all)
        


### Subir una nueva imagen o Crear Carpeta  [POST]
-imagen Local
Si se está subiendo una imagen local se debe usar Content-Type:multipart/form-data, con la imagen en el campo image, indicando también el type y opcionalmente el name
-imagen Remota
Si en vez de eso se especifica imageUrl en el contenido (application/json o application/x-www-form-urlencoded) se trae la imagen de la URL indicada
-Carpeta
Para crear una carpeta sólo hay que indicar contenido application/json o application/x-www-form-urlencoded

+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta.
  + name:  (string, optional) - Nombre de la Plantilla
  + type : IMAGE (enum[string], required) - Tipo de Plantilla
    + Members
        + `IMAGE`
        + `FOLDER`
  + maxWidth (integer, optional) - Ancho máximo al cual se hará un resize, manteniendo aspecto
  + maxWidth (integer, optional) - Alto máximo al cual se hará un resize, manteniendo aspecto
  + overwrite : false (boolean, optional) - Indica si se pisa la imagen en caso de existir, no aplica para carpetas
  

+ Request (application/json)

    {
        "type": "IMAGE",
        "name": "myimage.png"
    }


## Elemento
+ Parameters
    + account: testaccount (string, required)
    + id: 1 (number, required)

### Obtener una Imagen [GET /{account}/templates/{id}]
Devuelve la información de una imagen o carpeta. Para el caso de las carpetas, el get individual no aplica dado que siempre se trae un listado.
+ Response 200 (application/json)

{
    "href": ".../images"
    "success": true,
    "data": {
        "id": "/imagen2.png",
        "type": "IMAGE",
        "name": "imagen2.png",
        "location": "/",
        "created": "2015-12-02T10:23:12+0000",
        "thumbnail": "http://myperfit.com/../_th_imagen2.png",
        "public": "http://cdn.myperfit.com/../imagen3.png"
    }
}


### Modificar una Imagen/Carpeta [PUT /{account}/templates/{id}]

Modifica la información de una imagen o carpeta. Renombra o mueve una imagen o 

+ Parameters
  + account: testaccount (string, required) - Nombre de la cuenta.
  + name (string, optional) - Nuevo nombre en caso de querer renombrar.
  + location (string, optional) - Nueva ubicación en caso de querer mover.


### Eliminar una Imagen/Carpeta [DELETE /{account}/templates/{id}]
Elimina una imagen o carpeta. 
En el caso de las carpetas, se elimina la carpeta con todo su contenido